apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: expense
  name: expense-trainee
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]

-------

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: expense-trainee
  namespace: expense
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role #this must be Role or ClusterRole
  name: expense-trainee
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: suresh
  

-----------------
# namespace admin access to another user ramesh  

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: expense
  name: expense-admin
rules:
- apiGroups: ["*"] # "" indicates the core API group
  resources: ["*"]
  verbs: ["*"]

-------

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: expense-admin
  namespace: expense
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role #this must be Role or ClusterRole
  name: expense-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: ramesh
  
----

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: expense
rules:
- apiGroups: [""] # core API group
  resources: ["nodes","persistentvolumes","namespaces"]
  verbs: ["list","get","watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: expense
subjects:
- kind: User
  name: ramesh
  apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: expense



